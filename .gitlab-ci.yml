stages:
  - deploy

image: registry.gitlab.com/redmic-project/docker/docker-deploy:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  STACK: confluent
  SERVICES_TO_CHECK: confluent_${CI_PROJECT_NAME}

deploy-ksql-server-supporting-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    IMAGE_TAG: ${DEV_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.dev.yml
    PUBLIC_HOSTNAME: ${DEV_PUBLIC_HOSTNAME}
    UI_AUTH: ${DEV_UI_AUTH}
  script:
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME}
      UI_AUTH=${UI_AUTH}
  environment:
    name: dev/${CI_PROJECT_NAME}
  only:
    - branches
  except:
    - master
  when: manual

deploy-ksql-server-stable-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    IMAGE_TAG: ${DEV_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.dev.yml
    PUBLIC_HOSTNAME: ${DEV_PUBLIC_HOSTNAME}
    UI_AUTH: ${DEV_UI_AUTH}
  script:
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME}
      UI_AUTH=${UI_AUTH}
  environment:
    name: dev/${CI_PROJECT_NAME}
  only:
    - master
  when: manual

deploy-ksql-server-supporting-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    IMAGE_TAG: ${PRO_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.prod.yml
    PUBLIC_HOSTNAME: ${PRO_PUBLIC_HOSTNAME}
    UI_AUTH: ${PRO_UI_AUTH}
  script:
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME}
      UI_AUTH=${UI_AUTH}
  environment:
    name: pro/${CI_PROJECT_NAME}
  only:
    - branches
  except:
    - master
  when: manual

deploy-ksql-server-stable-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    IMAGE_TAG: ${PRO_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.prod.yml
    PUBLIC_HOSTNAME: ${PRO_PUBLIC_HOSTNAME}
    UI_AUTH: ${PRO_UI_AUTH}
  script:
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME}
      UI_AUTH=${UI_AUTH}
  environment:
    name: pro/${CI_PROJECT_NAME}
  only:
    - master
  when: manual
