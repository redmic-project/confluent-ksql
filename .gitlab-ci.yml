stages:
  - deploy

image: ${DOCKER_DEPLOY_IMAGE_NAME}:${DOCKER_DEPLOY_IMAGE_TAG}

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  STACK: confluent

deploy-ksql-server-supporting-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-server
    IMAGE_TAG: ${DEV_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-server.tmpl.yml:docker-compose.ksql-server.dev.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/ksql-server
  only:
    - branches
  except:
    - master
  when: manual

deploy-ksql-server-stable-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-server
    IMAGE_TAG: ${DEV_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-server.tmpl.yml:docker-compose.ksql-server.dev.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/ksql-server
  only:
    - master
  when: manual

deploy-ksql-server-supporting-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-server
    IMAGE_TAG: ${PRO_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-server.tmpl.yml:docker-compose.ksql-server.prod.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: pro/ksql-server
  only:
    - branches
  except:
    - master
  when: manual

deploy-ksql-server-stable-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-server
    IMAGE_TAG: ${PRO_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-server.tmpl.yml:docker-compose.ksql-server.prod.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: pro/ksql-server
  only:
    - master
  when: manual

deploy-ksql-client-supporting-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-client
    IMAGE_TAG: ${DEV_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-client.tmpl.yml:docker-compose.ksql-client.dev.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/ksql-client
  only:
    - branches
  except:
    - master
  when: manual

deploy-ksql-client-stable-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-client
    IMAGE_TAG: ${DEV_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-client.tmpl.yml:docker-compose.ksql-client.dev.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/ksql-client
  only:
    - master
  when: manual

deploy-ksql-client-supporting-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-client
    IMAGE_TAG: ${PRO_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-client.tmpl.yml:docker-compose.ksql-client.prod.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: pro/ksql-client
  only:
    - branches
  except:
    - master
  when: manual

deploy-ksql-client-stable-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICES_TO_CHECK: confluent_ksql-client
    IMAGE_TAG: ${PRO_CONFLUENT_VERSION}
    COMPOSE_FILE: docker-compose.ksql-client.tmpl.yml:docker-compose.ksql-client.prod.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: pro/ksql-client
  only:
    - master
  when: manual
